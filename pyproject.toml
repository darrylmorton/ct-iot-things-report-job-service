[tool.poetry]
name = "things_report_job_service"
version = "0.0.1"
description = "things_report_job_service"
authors = ["Darryl Morton"]
license = "GNU"
readme = "README.md"
repository = "https://github.com/darrylmorton/ct-iot-things-report-job-service.git"
keywords = ["ct", "iot", "things", "report", "job", "service"]
packages = [{ include = "things_report_job_service", from = "src" }]

[tool.poetry.dependencies]
python = "^3.12.0"
boto3 = "^1.34.23"
python-dotenv = "^1.0.0"
sqlalchemy = "^2.0.29"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
psycopg = "^3.1.18"
structlog = "^24.1.0"
pydantic = "^2.6.4"
async-sqlalchemy = "^1.0.0"
greenlet = "^3.0.3"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.6"
aioboto3 = "^12.3.0"

[tool.poetry.group.dev.dependencies]
moto = "^5.0.5"
ruff = "^0.3.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
preview = true
include = ["*.py", "*.pyi", "pyproject.toml", "*.ipynb"]
line-length = 88  # defaults to 88 like black
target-version = "py312"  # the python version to target, useful when considering code upgrades, defaults to "py310"
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F", "E"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
#magic-trailing-comma = "respect"

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
asyncio_mode = "auto"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
addopts = "--cov --cov-config=./tests/pytest-cov.ini --cov-report term-missing --cov-report=html"
